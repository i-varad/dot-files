#! /bin/sh


polybar &
pgrep -x sxhkd > /dev/null || sxhkd &

INTERNAL_MONITOR="eDP-1"
EXTERNAL_MONITOR="HDMI-1"

if [[ "$1" = 0 ]]; then
	if xrandr -q | grep "${EXTERNAL_MONITOR} connected"; then
		xrandr --output ${EXTERNAL_MONITOR} --mode 1920x1080 --right ${INTERNAL_MONITOR}
		bspc monitor "${INTERNAL_MONITOR}" -d 1 2 3 4
		bspc monitor "${EXTERNAL_MONITOR}" -d 5 6 7 8 
		bspc wm -O "$INTERNAL_MONITOR" "$EXTERNAL_MONITOR"

	else
		bspc monitor "${INTERNAL_MONITOR}" -d 1 2 3 4 5 6 7 8 
	fi
fi 

monitor_add() {
  # Move first 5 desktops to external monitor
  # for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | sed 4q); do
  #   bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
  # done

  bspc monitor "${INTERNAL_MONITOR}" -o 1 2 3 4
	bspc monitor "${EXTERNAL_MONITOR}" -o 5 6 7 8 
  # Remove default desktop created by bspwm
  # bspc desktop Desktop --remove

  # reorder monitors
  bspc wm -O  "$INTERNAL_MONITOR" "$EXTERNAL_MONITOR"
}

monitor_remove() {
  # Add default temp desktop because a minimum of one desktop is required per monitor
  bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  # Move all desktops except the last default desktop to internal monitor
  for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
    bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
  done

  # delete default desktops
  bspc desktop Desktop --remove

  # reorder desktops
  bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8
}

if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
  # set xrandr rules for docked setup
  xrandr --output "$INTERNAL_MONITOR"  --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --primary --mode 1920x1080 --pos 1920x0 --rotate normal
  if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 4 ]]; then
    monitor_add
  fi
  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
else
  # set xrandr rules for mobile setup
  xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --off
  if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 8 ]]; then
    monitor_remove
  fi
fi

bspc config border_width         2
bspc config window_gap          8

bspc config active_border_color \#2b3052
bspc config normal_border_color \#2b3052

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
